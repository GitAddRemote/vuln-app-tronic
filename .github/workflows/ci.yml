name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  web_and_modern_api:
    runs-on: ubuntu-latest
    env:
      # Use repo-level variable if set; otherwise fall back
      LAB_SUBNET: ${{ vars.LAB_SUBNET || '172.30.0.0/16' }}
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Docker versions
        run: |
          docker --version
          docker compose version

      - name: Prepare env
        run: |
          cp .env.example .env || true

      - name: Validate compose
        run: docker compose config

      - name: Pull images
        run: docker compose --profile web-basics --profile modern-api pull

      - name: Start services
        run: docker compose --profile web-basics --profile modern-api up -d

      - name: Wait for endpoints (web + modern)
        shell: bash
        run: |
          set -euo pipefail
          urls=(
            "http://localhost:${DVWA_PORT:-8080}"
            "http://localhost:${BWAPP_PORT:-8081}"
            "http://localhost:${MUTILLIDAE_PORT:-8082}"
            "http://localhost:${JUICESHOP_PORT:-3000}"
            "http://localhost:${VAMPI_PORT:-5000}"
          )
          for url in "${urls[@]}"; do
            echo "Waiting for $url..."
            for i in {1..60}; do
              code=$(curl -s -o /dev/null -w "%{http_code}" "$url" || true)
              if [[ "$code" == "200" || "$code" == "302" ]]; then
                echo "OK $url ($code)"; break
              fi
              sleep 3
              if [[ $i -eq 60 ]]; then echo "Timeout $url (last=$code)"; exit 1; fi
            done
          done

      - name: Smoke tests
        run: |
          set -euo pipefail
          curl -sI http://localhost:${DVWA_PORT:-8080}/ | head -n1
          curl -sI http://localhost:${BWAPP_PORT:-8081}/ | head -n1
          curl -sI http://localhost:${MUTILLIDAE_PORT:-8082}/ | head -n1
          curl -sI http://localhost:${JUICESHOP_PORT:-3000}/ | head -n1
          curl -sI http://localhost:${VAMPI_PORT:-5000}/ | head -n1 || true

      - name: Logs on failure
        if: failure()
        run: docker compose logs --no-log-prefix

      - name: Tear down
        if: always()
        run: docker compose down -v

  api_only:
    runs-on: ubuntu-latest
    env:
      LAB_SUBNET: ${{ vars.LAB_SUBNET || '172.30.0.0/16' }}
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Prepare env
        run: |
          cp .env.example .env || true

      - name: Validate compose
        run: docker compose config

      - name: Pull images
        run: docker compose --profile api-only pull

      - name: Start services
        run: docker compose --profile api-only up -d

      - name: Wait for endpoints (api-only)
        shell: bash
        run: |
          set -euo pipefail
          urls=(
            "http://localhost:${DVWS_PORT:-8888}"
            "http://localhost:${DVGA_PORT:-5010}/graphiql"
          )
          for url in "${urls[@]}"; do
            echo "Waiting for $url..."
            for i in {1..60}; do
              code=$(curl -s -o /dev/null -w "%{http_code}" "$url" || true)
              if [[ "$code" == "200" || "$code" == "302" ]]; then
                echo "OK $url ($code)"; break
              fi
              sleep 3
              if [[ $i -eq 60 ]]; then echo "Timeout $url (last=$code)"; exit 1; fi
            done
          done

      - name: Smoke tests
        run: |
          set -euo pipefail
          curl -sI http://localhost:${DVWS_PORT:-8888}/ | head -n1 || true
          curl -sI http://localhost:${DVGA_PORT:-5010}/graphiql | head -n1 || true

      - name: Logs on failure
        if: failure()
        run: docker compose logs --no-log-prefix

      - name: Tear down
        if: always()
        run: docker compose down -v

